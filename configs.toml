# please note: 'inherit' is a reserved word.
# the value of 'inherit' refers to another config block which is taken as a template for this one.
# the templates values will be overwritten by those in this block.
# you may also define additional values to your liking.

# if the client calls without any arguments
# the [empty] configuration is deliverd.
# it should remain empty :-)
[empty]

# if no rules matches but there ARE parameters posted,
# the [default] configuration is deliverd.
# it should remain empty. please adjust rules instead.
[default]

[production]
NAME = "production"
AUTH_BACKEND = "auth.dom.de"
CONTENT_BACKEND = "content.dom.de"

[development]
NAME = "development"
AUTH_BACKEND = "devauth.dom.de"
CONTENT_BACKEND = "devcontent.dom.de"

[api_v3_prod_android]
inherit = "production"
AUTH_BACKEND = "auth3.dom.de"
CONTENT_BACKEND = "content3.dom.de"

[api_v3_prod_ios]
inherit = "production"
AUTH_BACKEND = "auth3.dom.de"
CONTENT_BACKEND = "content3.dom.de"

[api_v3_dev_android]
inherit = "development"
AUTH_BACKEND = "devauth3.dom.de"
CONTENT_BACKEND = "devcontent3.dom.de"

[api_v3_dev_ios]
inherit = "development"
AUTH_BACKEND = "devauth3.dom.de"
CONTENT_BACKEND = "devcontent3.dom.de"

[api_v2_prod_android]
inherit = "production"

[api_v2_prod_ios]
inherit = "production"

[api_v2_dev_android]
inherit = "development"

[api_v2_dev_ios]
inherit = "development"

[comm_proc_prod]
AUTH_BACKEND = "auth.dom.de"

[comm_proc_dev]
AUTH_BACKEND = "devauth.dom.de"

[new_comm_proc_prod]
AUTH_BACKEND = "auth2.dom.de"

[new_comm_proc_dev]
AUTH_BACKEND = "devauth.dom.de"

[rules]

  ### FOR ANDROID
  ## PRODUCTION
  [rules.api_v3_prod_android]
    # higher prio beats lower prio!
    # in case of more then one rule matching, the one with higher prio wins.
    prio = 14
    expression = "a and b and c"

    [rules.api_v3_prod_android.conditions]

      [rules.api_v3_prod_android.conditions.a]
        key = "app_version"
        value = "1.0"
        comparator = ">"

      [rules.api_v3_prod_android.conditions.b]
        key = "os"
        value = "Android"
        comparator = "=="

      [rules.api_v3_prod_android.conditions.c]
        key = "env"
        value = "prod"
        comparator = "=="

  [rules.api_v2_prod_android]
    # higher prio beats lower prio!
    # in case of more then one rule matching, the one with higher prio wins.
    prio = 13
    expression = "a and b and c"

    [rules.api_v2_prod_android.conditions]

      [rules.api_v2_prod_android.conditions.a]
        key = "app_version"
        value = "1.0"
        comparator = "<="

      [rules.api_v2_prod_android.conditions.b]
        key = "os"
        value = "Android"
        comparator = "=="

      [rules.api_v2_prod_android.conditions.c]
        key = "env"
        value = "prod"
        comparator = "=="

  ## DEVELOPOMENT
  [rules.api_v3_dev_android]
    # higher prio beats lower prio!
    # in case of more then one rule matching, the one with higher prio wins.
    prio = 12
    expression = "a and b and c"

    [rules.api_v3_dev_android.conditions]

      [rules.api_v3_dev_android.conditions.a]
        key = "app_version"
        value = "1.0"
        comparator = ">"

      [rules.api_v3_dev_android.conditions.b]
        key = "os"
        value = "Android"
        comparator = "=="

      [rules.api_v3_dev_android.conditions.c]
        key = "env"
        value = "dev"
        comparator = "=="

  [rules.api_v2_dev_android]
    # higher prio beats lower prio!
    # in case of more then one rule matching, the one with higher prio wins.
    prio = 11
    expression = "a and b and c"

    [rules.api_v2_dev_android.conditions]

      [rules.api_v2_dev_android.conditions.a]
        key = "app_version"
        value = "1.0"
        comparator = "<="

      [rules.api_v2_dev_android.conditions.b]
        key = "os"
        value = "Android"
        comparator = "=="

      [rules.api_v2_dev_android.conditions.c]
        key = "env"
        value = "dev"
        comparator = "=="

  ### FOR IOS
  ## PRODUCTION
  [rules.api_v3_prod_ios]
    # higher prio beats lower prio!
    # in case of more then one rule matching, the one with higher prio wins.
    prio = 10
    expression = "a and b and c"

    [rules.api_v3_prod_ios.conditions]

      [rules.api_v3_prod_ios.conditions.a]
        key = "app_version"
        value = "1.0"
        comparator = ">"

      [rules.api_v3_prod_ios.conditions.b]
        key = "os"
        value = "ios"
        comparator = "=="

      [rules.api_v3_prod_ios.conditions.c]
        key = "env"
        value = "prod"
        comparator = "=="

  [rules.api_v2_prod_ios]
    # higher prio beats lower prio!
    # in case of more then one rule matching, the one with higher prio wins.
    prio = 9
    expression = "a and b and c"

    [rules.api_v2_prod_ios.conditions]

      [rules.api_v2_prod_ios.conditions.a]
        key = "app_version"
        value = "1.0"
        comparator = "<="

      [rules.api_v2_prod_ios.conditions.b]
        key = "os"
        value = "ios"
        comparator = "=="

      [rules.api_v2_prod_ios.conditions.c]
        key = "env"
        value = "prod"
        comparator = "=="

  ## DEVELOPOMENT
  [rules.api_v3_dev_ios]
    # higher prio beats lower prio!
    # in case of more then one rule matching, the one with higher prio wins.
    prio = 8
    expression = "a and b and c"

    [rules.api_v3_dev_ios.conditions]

      [rules.api_v3_dev_ios.conditions.a]
        key = "app_version"
        value = "1.0"
        comparator = ">"

      [rules.api_v3_dev_ios.conditions.b]
        key = "os"
        value = "ios"
        comparator = "=="

      [rules.api_v3_dev_ios.conditions.c]
        key = "env"
        value = "dev"
        comparator = "=="

  [rules.api_v2_dev_ios]
    # higher prio beats lower prio!
    # in case of more then one rule matching, the one with higher prio wins.
    prio = 7
    expression = "a and b and c"

    [rules.api_v2_dev_ios.conditions]

      [rules.api_v2_dev_ios.conditions.a]
        key = "app_version"
        value = "1.0"
        comparator = "<="

      [rules.api_v2_dev_ios.conditions.b]
        key = "os"
        value = "ios"
        comparator = "=="

      [rules.api_v2_dev_ios.conditions.c]
        key = "env"
        value = "dev"
        comparator = "=="


  ### COMMON
  ## PRODUCTION
  [rules.comm_proc_prod]
    prio = 6
    expression = "a and b"

    [rules.comm_proc_prod.conditions]
      [rules.comm_proc_prod.conditions.a]
        key = "app_version"
        value = "1.0"
        comparator = "<="
      [rules.comm_proc_prod.conditions.b]
        key = "env"
        value = "prod"
        comparator = "=="

  [rules.new_comm_proc_prod]
    prio = 5
    expression = "a and b"

    [rules.new_comm_proc_prod.conditions]
      [rules.new_comm_proc_prod.conditions.a]
        key = "app_version"
        value = "1.0"
        comparator = ">"
      [rules.new_comm_proc_prod.conditions.b]
        key = "env"
        value = "prod"
        comparator = "=="

  ## DEVELOPOMENT
  [rules.comm_proc_dev]
    prio = 4
    expression = "a and b"

    [rules.comm_proc_dev.conditions]
      [rules.comm_proc_dev.conditions.a]
        key = "app_version"
        value = "1.0"
        comparator = "<="
      [rules.comm_proc_dev.conditions.b]
        key = "env"
        value = "dev"
        comparator = "=="

  [rules.new_comm_proc_dev]
    prio = 3
    expression = "a and b"

    [rules.new_comm_proc_dev.conditions]
      [rules.new_comm_proc_dev.conditions.a]
        key = "app_version"
        value = "1.0"
        comparator = ">"
      [rules.new_comm_proc_dev.conditions.b]
        key = "env"
        value = "dev"
        comparator = "=="